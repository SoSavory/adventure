<div id="story_container" class="container">

  <div id="story_right_container">
    <div id="story_info">
      <h1 id="story_story_title"></h1>
      <h2 id="story_story_author"></h2>
      <p id="story_story_summary"></p>
      <div id="child_pages_container"></div>
      <div id="story_button_container">
        <div id="reminder" onclick="$(this).hide(500)"></div>
        <a id="back_button" onclick="cyclePages()">Previous Page</a>
        <a id="restart_button" onclick="backToStart()">Restart</a>
      </div>
    </div>
  </div>

  <div id="page_left_container">
    <div id="page">
      <h3 id="story_page_title"></h3>
      <p id="story_page_text"></p>
    </div>
  </div>


</div>

<script>
  $story = JSON.parse(<%= raw @story.to_json %>);
  $('#story_story_title').html($story.title);
  $('#story_story_author').html("By: " + $story.author);
  $('#story_story_summary').html($story.summary);

  $start_page = $story.pages.filter(function(val) {
    return val.level === $story.levels[0];
  })[0].id;

  $current_page = $start_page;
  $previous_pages = [];
  $previous_pages_current_index = -1;

  function setCurrentPage(id, set_previous){
    $current_page = $story.pages.filter(function(val) {
      return val.id === id;
    })[0];
    //check if page already exists in array, if so, ignore it.
    if (set_previous === true) {
      $previous_pages.push($current_page.id);
      $previous_pages_current_index++;
    };
    setPageTitle($current_page);
    setChildPages($current_page);
    setCurrentText($current_page);
    $("#reminder").hide();
  };

  function setPageTitle(page){
    $("#story_page_title").html(page.title);
  };

  function setChildPages(page){
    $("#child_pages_container").html("");
    $child_pages = $story.pages.filter(function(val) {
      return val.parent_id === page.id;
    });
    $.each($child_pages, function() {
      $("#child_pages_container").append("<a class='child_page_link' onClick='setCurrentPage(" + this.id + ", true)'>" + this.title + "</a>");
    });
  };

  function setCurrentText(page){
    $("#story_page_text").html(page.text);
  };

  function cyclePages(){
    try {
      setCurrentPage($previous_pages[$previous_pages_current_index - 1], false);
    } catch(err) {
      $('#reminder').html("You are already on the first page.");
      $('#reminder').show(500);
    } finally {
      if ($previous_pages_current_index === 0) {
        $previous_pages_current_index = 0
      } else {
        $previous_pages_current_index = ($previous_pages_current_index - 1);
      }
    }
  }

  function backToStart(){
    $previous_pages = [];
    $previous_pages_current_index = -1;
    setCurrentPage($start_page);
  };

  // $.each($story.pages, function() {
  //   $("#pages").append("<li onClick='setCurrentPage(" + this.id + ")'>" + this.title + "</li>");
  // });

  setCurrentPage($current_page, true);
</script>
